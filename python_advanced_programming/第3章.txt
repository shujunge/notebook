类介绍
3.1 子类化内置类型
python有一个叫object的内置类型,它是所有内置类型的祖先，即可以将这个内置类型子类化.例如可以对list、dict等等进行子类化,
3.2 访问超类中的方法
super是一个内置类，可用于访问属于某个对象的超类属性.
python的方法解析顺序是基于C3。
高级属性访问模式：在当每一个属性前面加上__前缀，解释器就会立刻将其重命名.
描述符:
运行能自定义在引用一个对象的属性时应该完成的事情.
描述符协议是基于3个特殊的方法.
1.__set__(self,obj,type=none);在设置属性时将调用该方法.
2.__get__(self,obj,type=none);在读取属性时将调用该方法.
3.__delete__(self,obj,type=none); 对属性调用del时将调用该方法.
1和2 简称为数据描述符.

3.3使用property 和 槽(slot)
property 提供了一个内置的描述符类型，它知道如何将一个属性链接到一组方法上.

3.4 元编程
1.函数装饰器-一种元编程方法
2.类装饰器
类装饰器与函数装饰器完全相同,唯一的区别在于其返回值是一个类,而不是函数对象.
3.使用__new__()方法覆写实例创建过程.
__new__()方法的调用会优先于__init__()初始化方法.通常来说，覆写__new__()的实现将会使用合适的参数调用其超类的super().__new__(),并在返回前修改实例.
4.元类
实例、类、type的关系
-instance - is instance of -class - is instance of -type-

5.python3 中新元类语法
框架是元类真正适合使用的地方.

python语言
python语言首先被转化成抽象语法树，然后才被编译成字节码.
